// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as ClientOptions, TDataShape } from '@hey-api/client-axios'
import type { V2AddTagToPostData, V2AddTagToPostError, V2AddTagToPostResponse, V2CmdCalculateEmbeddingData, V2CmdCalculateEmbeddingResponse, V2CmdDownloadFromDanbooruData, V2CmdDownloadFromDanbooruError, V2CmdDownloadFromDanbooruResponse, V2CreateTagData, V2CreateTagError, V2CreateTagResponse, V2DeletePostsData, V2DeletePostsError, V2DeletePostsResponse, V2DeleteTagData, V2DeleteTagError, V2DeleteTagResponse, V2DeleteTagsData, V2DeleteTagsError, V2DeleteTagsResponse, V2GetExtensionCountData, V2GetExtensionCountError, V2GetExtensionCountResponse, V2GetOriginalData, V2GetOriginalError, V2GetOriginalResponse, V2GetPostData, V2GetPostError, V2GetPostResponse, V2GetPostsCountData, V2GetPostsCountError, V2GetPostsCountResponse, V2GetScoreCountData, V2GetScoreCountError, V2GetScoreCountResponse, V2GetSimilarPostsData, V2GetSimilarPostsError, V2GetSimilarPostsResponse, V2GetTagsCountData, V2GetTagsCountError, V2GetTagsCountResponse, V2GetThumbnailData, V2GetThumbnailError, V2GetThumbnailResponse, V2ListTagGroupData, V2ListTagGroupResponse, V2ListTagsData, V2ListTagsError, V2ListTagsResponse, V2RemoveTagFromPostData, V2RemoveTagFromPostError, V2RemoveTagFromPostResponse, V2RotatePostImageData, V2RotatePostImageError, V2RotatePostImageResponse, V2SearchPostsData, V2SearchPostsError, V2SearchPostsResponse, V2UpdatePostCaptionData, V2UpdatePostCaptionError, V2UpdatePostCaptionResponse, V2UpdatePostRatingData, V2UpdatePostRatingError, V2UpdatePostRatingResponse, V2UpdatePostScoreData, V2UpdatePostScoreError, V2UpdatePostScoreResponse, V2UpdateTagData, V2UpdateTagError, V2UpdateTagResponse } from './types.gen'
import { client as _heyApiClient } from './client.gen'

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>
}

/**
 * RemoveTagFromPost
 * Remove tag from post by id.
 */
export function v2RemoveTagFromPost<ThrowOnError extends boolean = false>(options: Options<V2RemoveTagFromPostData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).delete<V2RemoveTagFromPostResponse, V2RemoveTagFromPostError, ThrowOnError>({
    url: '/v2/posts/{post_id}/tags/{tag_name}',
    ...options,
  })
}

/**
 * AddTagToPost
 * Add tag to post by id.
 */
export function v2AddTagToPost<ThrowOnError extends boolean = false>(options: Options<V2AddTagToPostData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2AddTagToPostResponse, V2AddTagToPostError, ThrowOnError>({
    url: '/v2/posts/{post_id}/tags/{tag_name}',
    ...options,
  })
}

/**
 * DeletePosts
 * Delete posts by ids.
 */
export function v2DeletePosts<ThrowOnError extends boolean = false>(options: Options<V2DeletePostsData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).delete<V2DeletePostsResponse, V2DeletePostsError, ThrowOnError>({
    url: '/v2/posts/delete',
    ...options,
  })
}

/**
 * GetExtensionCount
 * Count posts by extension.
 */
export function v2GetExtensionCount<ThrowOnError extends boolean = false>(options: Options<V2GetExtensionCountData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2GetExtensionCountResponse, V2GetExtensionCountError, ThrowOnError>({
    url: '/v2/posts/count/extension',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * GetPost
 * Get post by id.
 */
export function v2GetPost<ThrowOnError extends boolean = false>(options: Options<V2GetPostData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).get<V2GetPostResponse, V2GetPostError, ThrowOnError>({
    url: '/v2/posts/{post_id}',
    ...options,
  })
}

/**
 * GetPostsCount
 * Count posts by filters.
 */
export function v2GetPostsCount<ThrowOnError extends boolean = false>(options: Options<V2GetPostsCountData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2GetPostsCountResponse, V2GetPostsCountError, ThrowOnError>({
    url: '/v2/posts/count',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * GetScoreCount
 * Count posts by score.
 */
export function v2GetScoreCount<ThrowOnError extends boolean = false>(options: Options<V2GetScoreCountData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2GetScoreCountResponse, V2GetScoreCountError, ThrowOnError>({
    url: '/v2/posts/count/score',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * GetSimilarPosts
 * Get similar posts by id.
 */
export function v2GetSimilarPosts<ThrowOnError extends boolean = false>(options: Options<V2GetSimilarPostsData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).get<V2GetSimilarPostsResponse, V2GetSimilarPostsError, ThrowOnError>({
    url: '/v2/posts/{post_id}/similar',
    ...options,
  })
}

/**
 * GetTagsCount
 * Count posts by rating.
 */
export function v2GetTagsCount<ThrowOnError extends boolean = false>(options: Options<V2GetTagsCountData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2GetTagsCountResponse, V2GetTagsCountError, ThrowOnError>({
    url: '/v2/posts/count/rating',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * RotatePostImage
 * Rotate post image by id.
 * It will rotate the image and update md5, width and height.
 */
export function v2RotatePostImage<ThrowOnError extends boolean = false>(options: Options<V2RotatePostImageData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2RotatePostImageResponse, V2RotatePostImageError, ThrowOnError>({
    url: '/v2/posts/{post_id}/rotate',
    ...options,
  })
}

/**
 * SearchPosts
 * Search for posts by filters.
 */
export function v2SearchPosts<ThrowOnError extends boolean = false>(options: Options<V2SearchPostsData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2SearchPostsResponse, V2SearchPostsError, ThrowOnError>({
    url: '/v2/posts/search',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * UpdatePostCaption
 * Update post caption by id.
 */
export function v2UpdatePostCaption<ThrowOnError extends boolean = false>(options: Options<V2UpdatePostCaptionData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2UpdatePostCaptionResponse, V2UpdatePostCaptionError, ThrowOnError>({
    url: '/v2/posts/{post_id}/caption',
    ...options,
  })
}

/**
 * UpdatePostRating
 * Update post rating by id.
 */
export function v2UpdatePostRating<ThrowOnError extends boolean = false>(options: Options<V2UpdatePostRatingData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2UpdatePostRatingResponse, V2UpdatePostRatingError, ThrowOnError>({
    url: '/v2/posts/{post_id}/rating',
    ...options,
  })
}

/**
 * UpdatePostScore
 * Update post score by id.
 */
export function v2UpdatePostScore<ThrowOnError extends boolean = false>(options: Options<V2UpdatePostScoreData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2UpdatePostScoreResponse, V2UpdatePostScoreError, ThrowOnError>({
    url: '/v2/posts/{post_id}/score',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * CmdCalculateEmbedding
 * Calculate embedding for all posts
 */
export function v2CmdCalculateEmbedding<ThrowOnError extends boolean = false>(options?: Options<V2CmdCalculateEmbeddingData, ThrowOnError>) {
  return (options?.client ?? _heyApiClient).post<V2CmdCalculateEmbeddingResponse, unknown, ThrowOnError>({
    url: '/v2/cmd/posts/embedding',
    ...options,
  })
}

/**
 * CmdDownloadFromDanbooru
 * Download posts from Danbooru
 */
export function v2CmdDownloadFromDanbooru<ThrowOnError extends boolean = false>(options: Options<V2CmdDownloadFromDanbooruData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2CmdDownloadFromDanbooruResponse, V2CmdDownloadFromDanbooruError, ThrowOnError>({
    url: '/v2/cmd/download-from-danbooru',
    ...options,
  })
}

/**
 * GetOriginal
 * Get original image.
 */
export function v2GetOriginal<ThrowOnError extends boolean = false>(options: Options<V2GetOriginalData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).get<V2GetOriginalResponse, V2GetOriginalError, ThrowOnError>({
    url: '/v2/images/original/{post_path}',
    ...options,
  })
}

/**
 * GetThumbnail
 * Get thumbnail image.
 */
export function v2GetThumbnail<ThrowOnError extends boolean = false>(options: Options<V2GetThumbnailData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).get<V2GetThumbnailResponse, V2GetThumbnailError, ThrowOnError>({
    url: '/v2/images/thumbnails/{post_path}',
    ...options,
  })
}

/**
 * DeleteTags
 * Delete multiple tags with the given names.
 */
export function v2DeleteTags<ThrowOnError extends boolean = false>(options: Options<V2DeleteTagsData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).delete<V2DeleteTagsResponse, V2DeleteTagsError, ThrowOnError>({
    url: '/v2/tags',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * ListTags
 * List all tags with pagination support.
 * The cursor is used to paginate through the results, and the limit specifies the number of results per page.
 */
export function v2ListTags<ThrowOnError extends boolean = false>(options: Options<V2ListTagsData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).get<V2ListTagsResponse, V2ListTagsError, ThrowOnError>({
    url: '/v2/tags',
    ...options,
  })
}

/**
 * CreateTag
 * Create a new tag with the given name.
 * Users can optionally specify a group ID to associate the tag with a tag group.
 */
export function v2CreateTag<ThrowOnError extends boolean = false>(options: Options<V2CreateTagData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2CreateTagResponse, V2CreateTagError, ThrowOnError>({
    url: '/v2/tags',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * DeleteTag
 * Delete a tag with the given name.
 */
export function v2DeleteTag<ThrowOnError extends boolean = false>(options: Options<V2DeleteTagData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).delete<V2DeleteTagResponse, V2DeleteTagError, ThrowOnError>({
    url: '/v2/tags/{name}',
    ...options,
  })
}

/**
 * UpdateTag
 * Update an existing tag with the given name.
 * Users can optionally specify a new group ID to associate the tag with a tag group.
 */
export function v2UpdateTag<ThrowOnError extends boolean = false>(options: Options<V2UpdateTagData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2UpdateTagResponse, V2UpdateTagError, ThrowOnError>({
    url: '/v2/tags/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * ListTagGroup
 * List all tag groups.
 */
export function v2ListTagGroup<ThrowOnError extends boolean = false>(options?: Options<V2ListTagGroupData, ThrowOnError>) {
  return (options?.client ?? _heyApiClient).get<V2ListTagGroupResponse, unknown, ThrowOnError>({
    url: '/v2/tags/groups',
    ...options,
  })
}
