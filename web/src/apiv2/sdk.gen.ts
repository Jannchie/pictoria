// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as ClientOptions, TDataShape } from '@hey-api/client-axios'
import type { V2DeletePostsData, V2DeletePostsError, V2DeletePostsResponse, V2GetExtensionCountData, V2GetExtensionCountError, V2GetExtensionCountResponse, V2GetPostData, V2GetPostError, V2GetPostResponse, V2GetPostsCountData, V2GetPostsCountError, V2GetPostsCountResponse, V2GetScoreCountData, V2GetScoreCountError, V2GetScoreCountResponse, V2GetSimilarPostsData, V2GetSimilarPostsError, V2GetSimilarPostsResponse, V2GetTagsCountData, V2GetTagsCountError, V2GetTagsCountResponse, V2SearchPostsData, V2SearchPostsError, V2SearchPostsResponse, V2UpdatePostCaptionData, V2UpdatePostCaptionError, V2UpdatePostCaptionResponse, V2UpdatePostRatingData, V2UpdatePostRatingError, V2UpdatePostRatingResponse, V2UpdatePostScoreData, V2UpdatePostScoreError, V2UpdatePostScoreResponse } from './types.gen'
import { client as _heyApiClient } from './client.gen'

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>
}

/**
 * DeletePosts
 * Delete posts by ids.
 */
export function v2DeletePosts<ThrowOnError extends boolean = false>(options: Options<V2DeletePostsData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).delete<V2DeletePostsResponse, V2DeletePostsError, ThrowOnError>({
    url: '/v2/posts/delete',
    ...options,
  })
}

/**
 * GetExtensionCount
 */
export function v2GetExtensionCount<ThrowOnError extends boolean = false>(options: Options<V2GetExtensionCountData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2GetExtensionCountResponse, V2GetExtensionCountError, ThrowOnError>({
    url: '/v2/posts/count/extension',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * GetPost
 * Get post by id.
 */
export function v2GetPost<ThrowOnError extends boolean = false>(options: Options<V2GetPostData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).get<V2GetPostResponse, V2GetPostError, ThrowOnError>({
    url: '/v2/posts/{post_id}',
    ...options,
  })
}

/**
 * GetPostsCount
 * Count posts by filters.
 */
export function v2GetPostsCount<ThrowOnError extends boolean = false>(options: Options<V2GetPostsCountData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2GetPostsCountResponse, V2GetPostsCountError, ThrowOnError>({
    url: '/v2/posts/count',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * GetScoreCount
 */
export function v2GetScoreCount<ThrowOnError extends boolean = false>(options: Options<V2GetScoreCountData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2GetScoreCountResponse, V2GetScoreCountError, ThrowOnError>({
    url: '/v2/posts/count/score',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * GetSimilarPosts
 * Get similar posts by id.
 */
export function v2GetSimilarPosts<ThrowOnError extends boolean = false>(options: Options<V2GetSimilarPostsData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).get<V2GetSimilarPostsResponse, V2GetSimilarPostsError, ThrowOnError>({
    url: '/v2/posts/{post_id}/similar',
    ...options,
  })
}

/**
 * GetTagsCount
 */
export function v2GetTagsCount<ThrowOnError extends boolean = false>(options: Options<V2GetTagsCountData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2GetTagsCountResponse, V2GetTagsCountError, ThrowOnError>({
    url: '/v2/posts/count/rating',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * SearchPosts
 * Search for posts by filters.
 */
export function v2SearchPosts<ThrowOnError extends boolean = false>(options: Options<V2SearchPostsData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2SearchPostsResponse, V2SearchPostsError, ThrowOnError>({
    url: '/v2/posts/search',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * UpdatePostCaption
 * Update post caption by id.
 */
export function v2UpdatePostCaption<ThrowOnError extends boolean = false>(options: Options<V2UpdatePostCaptionData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2UpdatePostCaptionResponse, V2UpdatePostCaptionError, ThrowOnError>({
    url: '/v2/posts/{post_id}/caption',
    ...options,
  })
}

/**
 * UpdatePostRating
 * Update post rating by id.
 */
export function v2UpdatePostRating<ThrowOnError extends boolean = false>(options: Options<V2UpdatePostRatingData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2UpdatePostRatingResponse, V2UpdatePostRatingError, ThrowOnError>({
    url: '/v2/posts/{post_id}/rating',
    ...options,
  })
}

/**
 * UpdatePostScore
 * Update post score by id.
 */
export function v2UpdatePostScore<ThrowOnError extends boolean = false>(options: Options<V2UpdatePostScoreData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2UpdatePostScoreResponse, V2UpdatePostScoreError, ThrowOnError>({
    url: '/v2/posts/{post_id}/score',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}
