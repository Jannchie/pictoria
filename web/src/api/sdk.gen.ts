// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as ClientOptions, TDataShape } from './client'
import type { V2AddTagToPostData, V2AddTagToPostErrors, V2AddTagToPostResponses, V2AutoCaptionData, V2AutoCaptionErrors, V2AutoCaptionResponses, V2AutoTagsAllData, V2AutoTagsAllResponses, V2AutoTagsData, V2AutoTagsErrors, V2AutoTagsResponses, V2AutoWaifuScorerData, V2AutoWaifuScorerResponses, V2BulkUpdatePostRatingData, V2BulkUpdatePostRatingErrors, V2BulkUpdatePostRatingResponses, V2BulkUpdatePostScoreData, V2BulkUpdatePostScoreErrors, V2BulkUpdatePostScoreResponses, V2CalculateEmbeddingData, V2CalculateEmbeddingResponses, V2CreateTagData, V2CreateTagErrors, V2CreateTagResponses, V2DeletePostsData, V2DeletePostsErrors, V2DeletePostsResponses, V2DeleteTagData, V2DeleteTagErrors, V2DeleteTagResponses, V2DeleteTagsData, V2DeleteTagsErrors, V2DeleteTagsResponses, V2DownloadFromDanbooruData, V2DownloadFromDanbooruErrors, V2DownloadFromDanbooruResponses, V2GetExtensionCountData, V2GetExtensionCountErrors, V2GetExtensionCountResponses, V2GetFoldersData, V2GetFoldersResponses, V2GetOriginalByIdData, V2GetOriginalByIdErrors, V2GetOriginalByIdResponses, V2GetOriginalData, V2GetOriginalErrors, V2GetOriginalResponses, V2GetPostData, V2GetPostErrors, V2GetPostResponses, V2GetPostsCountData, V2GetPostsCountErrors, V2GetPostsCountResponses, V2GetRatingCountData, V2GetRatingCountErrors, V2GetRatingCountResponses, V2GetScoreCountData, V2GetScoreCountErrors, V2GetScoreCountResponses, V2GetSimilarPostsData, V2GetSimilarPostsErrors, V2GetSimilarPostsResponses, V2GetThumbnailByIdData, V2GetThumbnailByIdErrors, V2GetThumbnailByIdResponses, V2GetThumbnailData, V2GetThumbnailErrors, V2GetThumbnailResponses, V2GetWaifuScorerData, V2GetWaifuScorerErrors, V2GetWaifuScorerResponses, V2GetWaifuScorerStatisticsData, V2GetWaifuScorerStatisticsResponses, V2ListPostsData, V2ListPostsErrors, V2ListPostsResponses, V2ListTagGroupData, V2ListTagGroupResponses, V2ListTagsData, V2ListTagsErrors, V2ListTagsResponses, V2RemoveTagFromPostData, V2RemoveTagFromPostErrors, V2RemoveTagFromPostResponses, V2RotatePostImageData, V2RotatePostImageErrors, V2RotatePostImageResponses, V2SearchPostsData, V2SearchPostsErrors, V2SearchPostsResponses, V2UpdatePostCaptionData, V2UpdatePostCaptionErrors, V2UpdatePostCaptionResponses, V2UpdatePostRatingData, V2UpdatePostRatingErrors, V2UpdatePostRatingResponses, V2UpdatePostScoreData, V2UpdatePostScoreErrors, V2UpdatePostScoreResponses, V2UpdatePostSourceData, V2UpdatePostSourceErrors, V2UpdatePostSourceResponses, V2UpdateTagData, V2UpdateTagErrors, V2UpdateTagResponses, V2UploadFileData, V2UploadFileErrors, V2UploadFileResponses } from './types.gen'
import { formDataBodySerializer } from './client'
import { client as _heyApiClient } from './client.gen'

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>
}

/**
 * RemoveTagFromPost
 * Remove tag from post by id.
 */
export function v2RemoveTagFromPost<ThrowOnError extends boolean = false>(options: Options<V2RemoveTagFromPostData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).delete<V2RemoveTagFromPostResponses, V2RemoveTagFromPostErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/posts/{post_id}/tags/{tag_name}',
    ...options,
  })
}

/**
 * AddTagToPost
 * Add tag to post by id.
 */
export function v2AddTagToPost<ThrowOnError extends boolean = false>(options: Options<V2AddTagToPostData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2AddTagToPostResponses, V2AddTagToPostErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/posts/{post_id}/tags/{tag_name}',
    ...options,
  })
}

/**
 * BulkUpdatePostRating
 * Update rating for multiple posts by ids.
 */
export function v2BulkUpdatePostRating<ThrowOnError extends boolean = false>(options: Options<V2BulkUpdatePostRatingData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2BulkUpdatePostRatingResponses, V2BulkUpdatePostRatingErrors, ThrowOnError>({
    url: '/v2/posts/bulk/rating',
    ...options,
  })
}

/**
 * BulkUpdatePostScore
 * Update score for multiple posts by ids.
 */
export function v2BulkUpdatePostScore<ThrowOnError extends boolean = false>(options: Options<V2BulkUpdatePostScoreData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2BulkUpdatePostScoreResponses, V2BulkUpdatePostScoreErrors, ThrowOnError>({
    url: '/v2/posts/bulk/score',
    ...options,
  })
}

/**
 * DeletePosts
 * Delete posts by ids.
 */
export function v2DeletePosts<ThrowOnError extends boolean = false>(options: Options<V2DeletePostsData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).delete<V2DeletePostsResponses, V2DeletePostsErrors, ThrowOnError>({
    url: '/v2/posts/delete',
    ...options,
  })
}

/**
 * GetExtensionCount
 * Count posts by extension.
 */
export function v2GetExtensionCount<ThrowOnError extends boolean = false>(options: Options<V2GetExtensionCountData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2GetExtensionCountResponses, V2GetExtensionCountErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/posts/count/extension',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * GetPost
 * Get post by id.
 */
export function v2GetPost<ThrowOnError extends boolean = false>(options: Options<V2GetPostData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).get<V2GetPostResponses, V2GetPostErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/posts/{post_id}',
    ...options,
  })
}

/**
 * GetPostsCount
 * Count posts by filters.
 */
export function v2GetPostsCount<ThrowOnError extends boolean = false>(options: Options<V2GetPostsCountData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2GetPostsCountResponses, V2GetPostsCountErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/posts/count',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * GetRatingCount
 * Count posts by rating.
 */
export function v2GetRatingCount<ThrowOnError extends boolean = false>(options: Options<V2GetRatingCountData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2GetRatingCountResponses, V2GetRatingCountErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/posts/count/rating',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * GetScoreCount
 * Count posts by score.
 */
export function v2GetScoreCount<ThrowOnError extends boolean = false>(options: Options<V2GetScoreCountData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2GetScoreCountResponses, V2GetScoreCountErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/posts/count/score',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * GetSimilarPosts
 * Get similar posts by id.
 */
export function v2GetSimilarPosts<ThrowOnError extends boolean = false>(options: Options<V2GetSimilarPostsData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).get<V2GetSimilarPostsResponses, V2GetSimilarPostsErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/posts/{post_id}/similar',
    ...options,
  })
}

/**
 * ListPosts
 * Get all posts.
 */
export function v2ListPosts<ThrowOnError extends boolean = false>(options?: Options<V2ListPostsData, ThrowOnError>) {
  return (options?.client ?? _heyApiClient).get<V2ListPostsResponses, V2ListPostsErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/posts',
    ...options,
  })
}

/**
 * RotatePostImage
 * Rotate post image by id.
 * It will rotate the image and update SHA256, width and height.
 */
export function v2RotatePostImage<ThrowOnError extends boolean = false>(options: Options<V2RotatePostImageData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2RotatePostImageResponses, V2RotatePostImageErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/posts/{post_id}/rotate',
    ...options,
  })
}

/**
 * SearchPosts
 * Search for posts by filters.
 */
export function v2SearchPosts<ThrowOnError extends boolean = false>(options: Options<V2SearchPostsData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2SearchPostsResponses, V2SearchPostsErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/posts/search',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * UpdatePostCaption
 * Update post caption by id.
 */
export function v2UpdatePostCaption<ThrowOnError extends boolean = false>(options: Options<V2UpdatePostCaptionData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2UpdatePostCaptionResponses, V2UpdatePostCaptionErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/posts/{post_id}/caption',
    ...options,
  })
}

/**
 * UpdatePostRating
 * Update post rating by id.
 */
export function v2UpdatePostRating<ThrowOnError extends boolean = false>(options: Options<V2UpdatePostRatingData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2UpdatePostRatingResponses, V2UpdatePostRatingErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/posts/{post_id}/rating',
    ...options,
  })
}

/**
 * UpdatePostScore
 * Update post score by id.
 */
export function v2UpdatePostScore<ThrowOnError extends boolean = false>(options: Options<V2UpdatePostScoreData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2UpdatePostScoreResponses, V2UpdatePostScoreErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/posts/{post_id}/score',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * UpdatePostSource
 * Update post source by id.
 */
export function v2UpdatePostSource<ThrowOnError extends boolean = false>(options: Options<V2UpdatePostSourceData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2UpdatePostSourceResponses, V2UpdatePostSourceErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/posts/{post_id}/source',
    ...options,
  })
}

/**
 * UploadFile
 */
export function v2UploadFile<ThrowOnError extends boolean = false>(options: Options<V2UploadFileData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2UploadFileResponses, V2UploadFileErrors, ThrowOnError>({
    ...formDataBodySerializer,
    url: '/v2/posts/upload',
    ...options,
    headers: {
      'Content-Type': null,
      ...options.headers,
    },
  })
}

/**
 * AutoCaption
 */
export function v2AutoCaption<ThrowOnError extends boolean = false>(options: Options<V2AutoCaptionData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2AutoCaptionResponses, V2AutoCaptionErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/cmd/auto-caption/{post_id}',
    ...options,
  })
}

/**
 * AutoTags
 * Auto tag a post
 */
export function v2AutoTags<ThrowOnError extends boolean = false>(options: Options<V2AutoTagsData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2AutoTagsResponses, V2AutoTagsErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/cmd/auto-tags/{post_id}',
    ...options,
  })
}

/**
 * AutoTagsAll
 */
export function v2AutoTagsAll<ThrowOnError extends boolean = false>(options?: Options<V2AutoTagsAllData, ThrowOnError>) {
  return (options?.client ?? _heyApiClient).put<V2AutoTagsAllResponses, unknown, ThrowOnError>({
    url: '/v2/cmd/auto-tags',
    ...options,
  })
}

/**
 * AutoWaifuScorer
 * Use Waifu Scorer to tag posts with a rating of 0.
 */
export function v2AutoWaifuScorer<ThrowOnError extends boolean = false>(options?: Options<V2AutoWaifuScorerData, ThrowOnError>) {
  return (options?.client ?? _heyApiClient).put<V2AutoWaifuScorerResponses, unknown, ThrowOnError>({
    url: '/v2/cmd/waifu-scorer',
    ...options,
  })
}

/**
 * CalculateEmbedding
 * Calculate embedding for all posts
 */
export function v2CalculateEmbedding<ThrowOnError extends boolean = false>(options?: Options<V2CalculateEmbeddingData, ThrowOnError>) {
  return (options?.client ?? _heyApiClient).post<V2CalculateEmbeddingResponses, unknown, ThrowOnError>({
    responseType: 'json',
    url: '/v2/cmd/posts/embedding',
    ...options,
  })
}

/**
 * DownloadFromDanbooru
 * Download posts from Danbooru
 */
export function v2DownloadFromDanbooru<ThrowOnError extends boolean = false>(options: Options<V2DownloadFromDanbooruData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2DownloadFromDanbooruResponses, V2DownloadFromDanbooruErrors, ThrowOnError>({
    url: '/v2/cmd/download-from-danbooru',
    ...options,
  })
}

/**
 * GetWaifuScorer
 * Get Waifu Scorer result for a post.
 */
export function v2GetWaifuScorer<ThrowOnError extends boolean = false>(options: Options<V2GetWaifuScorerData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).get<V2GetWaifuScorerResponses, V2GetWaifuScorerErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/cmd/waifu-scorer/{post_id}',
    ...options,
  })
}

/**
 * GetOriginal
 * Get original image.
 */
export function v2GetOriginal<ThrowOnError extends boolean = false>(options: Options<V2GetOriginalData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).get<V2GetOriginalResponses, V2GetOriginalErrors, ThrowOnError>({
    url: '/v2/images/original/{post_path}',
    ...options,
  })
}

/**
 * GetOriginalById
 * Get original image by id.
 */
export function v2GetOriginalById<ThrowOnError extends boolean = false>(options: Options<V2GetOriginalByIdData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).get<V2GetOriginalByIdResponses, V2GetOriginalByIdErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/images/original/id/{post_id}',
    ...options,
  })
}

/**
 * GetThumbnail
 * Get thumbnail image.
 */
export function v2GetThumbnail<ThrowOnError extends boolean = false>(options: Options<V2GetThumbnailData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).get<V2GetThumbnailResponses, V2GetThumbnailErrors, ThrowOnError>({
    url: '/v2/images/thumbnails/{post_path}',
    ...options,
  })
}

/**
 * GetThumbnailById
 * Get thumbnail image by id.
 */
export function v2GetThumbnailById<ThrowOnError extends boolean = false>(options: Options<V2GetThumbnailByIdData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).get<V2GetThumbnailByIdResponses, V2GetThumbnailByIdErrors, ThrowOnError>({
    url: '/v2/images/thumbnails/id/{post_id}',
    ...options,
  })
}

/**
 * DeleteTags
 * Delete multiple tags with the given names.
 */
export function v2DeleteTags<ThrowOnError extends boolean = false>(options: Options<V2DeleteTagsData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).delete<V2DeleteTagsResponses, V2DeleteTagsErrors, ThrowOnError>({
    url: '/v2/tags',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * ListTags
 * List all tags with pagination support.
 * The prev parameter is used to paginate through the results, and the limit specifies the number of results per page.
 */
export function v2ListTags<ThrowOnError extends boolean = false>(options?: Options<V2ListTagsData, ThrowOnError>) {
  return (options?.client ?? _heyApiClient).get<V2ListTagsResponses, V2ListTagsErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/tags',
    ...options,
  })
}

/**
 * CreateTag
 * Create a new tag with the given name.
 * Users can optionally specify a group ID to associate the tag with a tag group.
 */
export function v2CreateTag<ThrowOnError extends boolean = false>(options: Options<V2CreateTagData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).post<V2CreateTagResponses, V2CreateTagErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/tags',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * DeleteTag
 * Delete a tag with the given name.
 */
export function v2DeleteTag<ThrowOnError extends boolean = false>(options: Options<V2DeleteTagData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).delete<V2DeleteTagResponses, V2DeleteTagErrors, ThrowOnError>({
    url: '/v2/tags/{name}',
    ...options,
  })
}

/**
 * UpdateTag
 * Update an existing tag with the given name.
 * Users can optionally specify a new group ID to associate the tag with a tag group.
 */
export function v2UpdateTag<ThrowOnError extends boolean = false>(options: Options<V2UpdateTagData, ThrowOnError>) {
  return (options.client ?? _heyApiClient).put<V2UpdateTagResponses, V2UpdateTagErrors, ThrowOnError>({
    responseType: 'json',
    url: '/v2/tags/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * ListTagGroup
 * List all tag groups.
 */
export function v2ListTagGroup<ThrowOnError extends boolean = false>(options?: Options<V2ListTagGroupData, ThrowOnError>) {
  return (options?.client ?? _heyApiClient).get<V2ListTagGroupResponses, unknown, ThrowOnError>({
    responseType: 'json',
    url: '/v2/tags/groups',
    ...options,
  })
}

/**
 * GetFolders
 */
export function v2GetFolders<ThrowOnError extends boolean = false>(options?: Options<V2GetFoldersData, ThrowOnError>) {
  return (options?.client ?? _heyApiClient).get<V2GetFoldersResponses, unknown, ThrowOnError>({
    responseType: 'json',
    url: '/v2/folders',
    ...options,
  })
}

/**
 * GetWaifuScorerStatistics
 * Get statistics about the waifu scorer.
 * waifu score is between 0.0 and 10.0, devided into 10 buckets.
 * Each bucket contains the number of posts that fall into that score range.
 */
export function v2GetWaifuScorerStatistics<ThrowOnError extends boolean = false>(options?: Options<V2GetWaifuScorerStatisticsData, ThrowOnError>) {
  return (options?.client ?? _heyApiClient).get<V2GetWaifuScorerStatisticsResponses, unknown, ThrowOnError>({
    responseType: 'json',
    url: '/v2/statistics',
    ...options,
  })
}
